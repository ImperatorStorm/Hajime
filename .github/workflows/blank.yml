# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd source
          echo hajime.cpp getvarsfromfile.cpp server.cpp output.cpp languages.cpp installer.cpp wizard.cpp | xargs -n 1 -P 7 g++-10 -c -Ofast -std=c++20
          g++-10 -static -o hajime hajime.o server.o getvarsfromfile.o installer.o output.o languages.o wizard.o -pthread
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-linux-amd64
          path: source/hajime
  build-macos-amd64:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd source
          echo hajime.cpp getvarsfromfile.cpp server.cpp output.cpp languages.cpp installer.cpp wizard.cpp | xargs -n 1 -P 7 g++ -c -Ofast -std=c++20
          g++ -o hajime hajime.o server.o getvarsfromfile.o installer.o output.o languages.o wizard.o
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-macos-amd64
          path: source/hajime
  build-linux-arm32:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd source
          sudo apt-get update
          sudo apt-get install -y g++-11-arm-linux-gnueabihf
          echo hajime.cpp getvarsfromfile.cpp server.cpp output.cpp languages.cpp installer.cpp wizard.cpp | xargs -n 1 -P 7 arm-linux-gnueabihf-g++-11 -c -Ofast -std=c++20
          arm-linux-gnueabihf-g++-11 -static -o hajime hajime.o server.o getvarsfromfile.o installer.o output.o languages.o wizard.o -pthread
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-linux-arm32
          path: source/hajime
