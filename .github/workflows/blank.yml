# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cmake source -D CMAKE_CXX_COMPILER=g++-10
          cmake --build . -j 8
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-linux-amd64
          path: hajime
  build-macos-amd64:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cmake source
          cmake --build . -j 8
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-macos-amd64
          path: hajime
  build-macos-arm64:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd source
          echo hajime.cpp getvarsfromfile.cpp server.cpp output.cpp languages.cpp installer.cpp wizard.cpp deduce.cpp | xargs -n 1 -P 8 clang++ -target arm64-apple-macos -c -Ofast -std=c++20
          clang++ -target arm64-apple-macos -o hajime hajime.o server.o getvarsfromfile.o installer.o output.o languages.o wizard.o deduce.o
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-macos-arm64
          path: source/hajime
  build-linux-arm32:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-10-arm-linux-gnueabihf
          cmake source -D CMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++-10
          cmake --build . -j 8
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-linux-arm32
          path: hajime
  build-windows-amd64:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.10.0
      - name: Run a multi-line script
        run: |
          cmake source
          cmake --build . -j 8 --config Release
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-windows-amd64
          path: Release\hajime.exe
  build-windows-x86:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.10.0
      - name: Run a multi-line script
        run: |
          cmake source -A Win32
          cmake --build . -j 8 --config Release
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-windows-x86
          path: Release\hajime.exe
  build-windows-arm64:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.10.0
      - name: Run a multi-line script
        run: |
          cmake source -A ARM64
          cmake --build . -j 8 --config Release
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-windows-arm64
          path: Release\hajime.exe
  build-freebsd-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          curl -L -o fbsd_temp https://download.freebsd.org/ftp/releases/amd64/amd64/ISO-IMAGES/13.0/FreeBSD-13.0-RELEASE-amd64-bootonly.iso
          7z e -y fbsd_temp -otemp/usr/include usr/include
          7z e -y fbsd_temp -otemp/usr/lib usr/lib
          7z e -y fbsd_temp -otemp/lib lib
          cd source
          echo hajime.cpp getvarsfromfile.cpp server.cpp output.cpp languages.cpp installer.cpp wizard.cpp deduce.cpp | xargs -n 1 -P 8 clang++ -target x86_64-unknown-freebsd12.0 --sysroot=../temp/ -c -O3 -std=c++20
          clang++ -target x86_64-unknown-freebsd12.0 --sysroot=../temp/ -o hajime hajime.o server.o getvarsfromfile.o installer.o output.o languages.o wizard.o deduce.o
          
      - uses: actions/upload-artifact@v2
        with: 
          name: hajime-freebsd-amd64
          path: hajime
